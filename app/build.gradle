apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildToolsVersion

    def STRING = 'String'
    def SPOTIFY_CLIENT_ID = 'SPOTIFY_CLIENT_ID'
    def SPOTIFY_REDIRECT_SCHEME = 'SPOTIFY_REDIRECT_SCHEME'
    def SPOTIFY_REDIRECT_HOST = 'SPOTIFY_REDIRECT_HOST'
    def SPOTIFY_BASE_API_URL = 'SPOTIFY_BASE_API_URL'
    def BASE_IMAGE_URL = 'BASE_IMAGE_URL'

    Properties props = new Properties()
    if (file('../local.properties').exists()) {
        // if it doesn't exist, the props will all be null and the builds will fail
        props.load(new FileInputStream(file('../local.properties')))
    }

    defaultConfig {
        applicationId buildConfig.packageName

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode 1
        versionName "0.1.0"

        buildConfigField STRING, SPOTIFY_CLIENT_ID, props['clientID']
        buildConfigField STRING, SPOTIFY_REDIRECT_SCHEME, props['scheme']
        buildConfigField STRING, SPOTIFY_REDIRECT_HOST, props['host']
        buildConfigField STRING, SPOTIFY_BASE_API_URL, '"https://api.spotify.com/"'
        buildConfigField STRING, BASE_IMAGE_URL, '"http://image/"'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file(defaultConfig.applicationId + '.jks')
            storePassword props['storePassword']
            keyAlias props['keyAlias']
            keyPassword props['keyPassword']
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }

        release {
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    applicationVariants.all { variant ->
        variant.getCompileConfig